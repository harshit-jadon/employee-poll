// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App.js component should render the component app.js 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          class="head-container"
        >
          <h1
            class="header"
            data-testid="login-header"
          >
            Employee Polls
          </h1>
          <img
            alt="login-page-svg"
            src="employee1.png"
          />
          <h1>
            Log In
          </h1>
          <form
            class="form-div"
          >
            <div
              class="div-container"
            >
              <label
                class="label-box"
                for="user"
              >
                User
              </label>
              <div>
                <input
                  class="input-box"
                  data-testid="username-input"
                  placeholder="User"
                  type="text"
                  value=""
                />
              </div>
            </div>
            <div
              class="div-container"
            >
              <label
                class="label-box"
                for="password"
              >
                Password
              </label>
              <div
                class="mt-1"
              >
                <input
                  class="input-box"
                  data-testid="password-input"
                  placeholder="Password"
                  type="password"
                  value=""
                />
              </div>
            </div>
            <div
              class="submit-btn"
            >
              <button
                class="submit"
                data-testid="submit-button"
                type="submit"
              >
                Login
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        class="head-container"
      >
        <h1
          class="header"
          data-testid="login-header"
        >
          Employee Polls
        </h1>
        <img
          alt="login-page-svg"
          src="employee1.png"
        />
        <h1>
          Log In
        </h1>
        <form
          class="form-div"
        >
          <div
            class="div-container"
          >
            <label
              class="label-box"
              for="user"
            >
              User
            </label>
            <div>
              <input
                class="input-box"
                data-testid="username-input"
                placeholder="User"
                type="text"
                value=""
              />
            </div>
          </div>
          <div
            class="div-container"
          >
            <label
              class="label-box"
              for="password"
            >
              Password
            </label>
            <div
              class="mt-1"
            >
              <input
                class="input-box"
                data-testid="password-input"
                placeholder="Password"
                type="password"
                value=""
              />
            </div>
          </div>
          <div
            class="submit-btn"
          >
            <button
              class="submit"
              data-testid="submit-button"
              type="submit"
            >
              Login
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
